plugins {
	id "java"
	id "idea"
	id "maven-publish"
	id "net.minecraftforge.gradle" version "5.1.+"
	id "com.github.johnrengelman.shadow" version "7.1.0"
}

def versionObj = new Version(major: 1, minor: 15, revision: 0)

version = versionObj.toString()
group = mod_base_package
archivesBaseName = mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(8)
compileJava.options.encoding = "UTF-8"

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            // These arguments allow for optional authentication with Mojang servers.
            // If you want to authenticate, put these properties in GRADLE_HOME/gradle.properties.
            // By default, this is C:\Users\<your username>\.gradle\gradle.properties on Windows or ~/.gradle/gradle.properties on Linux/MacOS.
            if (project.hasProperty('mc_uuid') && project.hasProperty('mc_username') && project.hasProperty('mc_accessToken')) {
                // Your UUID, trimmed / without the dashes
                args '--uuid', project.getProperty('mc_uuid')
                // Your Minecraft in-game username, not email
                args '--username', project.getProperty('mc_username')
                // Your current access token. When it expires, you need to retrieve a new one and regenerate your run configurations.
                // You may be able to find it in your .minecraft folder in launcher_accounts.json or launcher_profiles.json.
                args '--accessToken', project.getProperty('mc_accessToken')
            }
        }
    }
}

// allow local forge version override
if (!project.hasProperty("wynntilsForgeVersion")) {
    ext.wynntilsForgeVersion=forge_version
}

configurations {
    include
    implementation.extendsFrom(include)
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${wynntilsForgeVersion}"

    include "javazoom:jlayer:1.0.1"
}

jar {
	enabled = false
}

shadowJar {
	archiveFileName = jar.archiveFileName
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	configurations = [project.configurations.include]
}

processResources {
    inputs.property "description", "The best Wynncraft mod you'll probably find!\nBuild " + versionObj.getBuild()
    inputs.property "version", versionObj.toVersion()

    filesMatching("mcmod.info") {
        expand "version": versionObj.toVersion(), "description": "The best Wynncraft mod you'll probably find!\nBuild " + versionObj.getBuild()
    }
}

reobf {
    shadowJar {}
}

class Version {
    int major, minor, revision

    static String getBuild() {
        System.getenv("BUILD_NUMBER") ?: System.getProperty("BUILD_NUMBER") ?: "DEV"
    }

    String toVersion() {
        "${major}.${minor}.${revision}"
    }

    String toString() {
        "${major}.${minor}.${revision}_$build-MC1.12.2"
    }
}

jar.dependsOn("shadowJar")

task installLocalGitHook(type: Copy) {
    from new File(rootProject.rootDir, '.github/hooks/commit-msg')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0775
}

prepareKotlinBuildScriptModel.dependsOn installLocalGitHook
build.dependsOn installLocalGitHook